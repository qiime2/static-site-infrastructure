name: deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: install system dependencies
      run: |
        sudo apt update
        sudo apt install software-properties-common

    - name: prepare ssh key
      # if: github.ref == 'refs/heads/main'
      env:
        SSH_PRIVATE_KEY: "${{ secrets.SSH_PRIVATE_KEY }}"
      run: |
        echo "$SSH_PRIVATE_KEY" > key.pem
        chmod 600 key.pem

    - name: prepare ssl files
      # if: github.ref == 'refs/heads/main'
      env:
        SSL_CRT: "${{ secrets.SSL_CRT }}"
        SSL_KEY: "${{ secrets.SSL_KEY }}"
      run: |
        echo "$SSL_CRT" > "*.qiime2.org.chained.crt"
        echo "$SSL_KEY" > "*.qiime2.org.key"
        echo "$SSL_KEY" > "pure-ftpd.pem"
        echo "$SSL_CRT" >> "pure-ftpd.pem"

    - name: prepare conda env
      run: |
        conda create -y -q -p ../deploy-env -c conda-forge ansible

    - name: provision server(s)
      # if: github.ref == 'refs/heads/main'
      # TODO Remove when Busywork is decommissioned (and remove `-e` below)
      env:
        FTP_USER_NAME: "${{ secrets.FTP_USER_NAME }}"
        FTP_USER_PASS: "${{ secrets.FTP_USER_PASS }}"
        FTP_USER_HOME: "${{ secrets.FTP_USER_HOME }}"
        FTP_USER_UID: "${{ secrets.FTP_USER_UID }}"
        FTP_USER_GID: "${{ secrets.FTP_USER_GID }}"
      run: |
        source "$CONDA/etc/profile.d/conda.sh"
        conda activate ../deploy-env
        ansible-playbook \
          -i inventory.yml \
          --private-key=key.pem \
          -u ubuntu \
          --become \
          -e FTP_USER_NAME=$FTP_USER_NAME \
          -e FTP_USER_PASS=$FTP_USER_PASS \
          -e FTP_USER_HOME=$FTP_USER_HOME \
          -e FTP_USER_UID=$FTP_USER_UID \
          -e FTP_USER_GID=$FTP_USER_GID \
          provision.yml
